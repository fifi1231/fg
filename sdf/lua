loadstring(game:HttpGet('https://raw.githubusercontent.com/fifi1231/fg/main/sdf/anyafk.lua'))()


getgenv().ConfigTable = {
    ["Fishing"] = {
        ["Buy Rods"] = true,
        ["Stats UI"] = true,
    },
    ["Optimizations"] = {
        ["Mega_Optimizer"] = true,
        ["hidepayer"] = true,
    },
}

repeat task.wait() until game:IsLoaded() 
repeat task.wait() until game:GetService("Players").LocalPlayer
repeat task.wait() until not game.Players.LocalPlayer.PlayerGui:FindFirstChild("__INTRO")
local Config = getgenv().ConfigTable


local LocalPlayer = game.Players.LocalPlayer
local HRP = LocalPlayer.Character.HumanoidRootPart
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Network = ReplicatedStorage:WaitForChild("Network")
local Active = workspace.__THINGS.__INSTANCE_CONTAINER.Active
local FishingRemote = Network.Instancing_InvokeCustomFromClient
local Library = require(ReplicatedStorage:WaitForChild('Library'))

local SaveMod = require(game:GetService("ReplicatedStorage").Library.Client.Save).Get()
local SHOP_ROD = {"Wooden Fishing Rod","Sturdy Fishing Rod","Advanced Fishing Rod","Super Fishing Rod","Pro Fishing Rod","Platinum Fishing Rod","Emerald Fishing Rod","Sapphire Fishing Rod","Amethyst Fishing Rod",}
local NEXT_ROD_COST = {["Wooden Fishing Rod"] = 100,["Sturdy Fishing Rod"] = 2500,["Advanced Fishing Rod"] = 25000,["Super Fishing Rod"] = 40000,["Platinum Fishing Rod"] = 150000,["Emerald Fishing Rod"] = 425000,["Sapphire Fishing Rod"] = 2250000,}
local NEXT_ROD = {["Wooden Fishing Rod"] = "Sturdy Fishing Rod",["Sturdy Fishing Rod"] = "Advanced Fishing Rod",["Advanced Fishing Rod"] = "Super Fishing Rod",["Super Fishing Rod"] = "Platinum Fishing Rod",["Platinum Fishing Rod"] = "Emerald Fishing Rod",["Emerald Fishing Rod"] = "Sapphire Fishing Rod",["Sapphire Fishing Rod"] = "Amethyst Fishing Rod",}

function GetFishingRank() return require(ReplicatedStorage.Library.Client.MasteryCmds).GetLevel("Fishing") end
function GetActive() return tostring(Active:GetChildren()[1]) end
local function GetCurrentRod() local FishRank,CurrentRod = 0,nil for i, v in pairs(SaveMod.Inventory.Misc) do if string.find(v.id, "Rod") then local RodRank = table.find(SHOP_ROD, v.id) if v.id == "Golden Fishing Rod" then CurrentRod = "Diamond Fishing Rod" FishRank = 6 elseif v.id == "Diamond Fishing Rod" then CurrentRod = "Diamond Fishing Rod" FishRank = 8 elseif RodRank > FishRank then CurrentRod = v.id FishRank = RodRank end end end return CurrentRod, FishRank end
local function CheckForItem(Id) for Type, List in pairs(SaveMod.Inventory) do for i, v in pairs(List) do if v.id == Id then local AM = (v._am) or 1 return i, AM, Type end end end end
local function GetCastVector() if GetActive() == "Fishing" then return Vector3.new(1123.921 + math.random(-10, 10), 72, -3532.623 + math.random(-10, 10)) elseif GetActive() == "AdvancedFishing" then return Vector3.new(1322.391 + math.random(-10, 10), 61, -4454.638 + math.random(-10, 10)) end end

local hugeCache = {}
local function GetAllHuges()
    local total = 0
    local save = SaveMod.Inventory
    local newHuges = {} 
    for i, v in pairs(save.Pet) do
        if string.find(v.id, "Huge") then
            total = total + 1
            if not hugeCache[i] then
                hugeCache[i] = v
                newHuges[i] = v
            end
        end
    end
    return total, newHuges
end

local StartingDiamonds = LocalPlayer.leaderstats["ðŸ’Ž Diamonds"].Value
local StartingHuge = GetAllHuges()
local DeepPoolTotal = 0
local NormalTotal = 0
local StartTime = os.time()
local Gui = nil
local GuiText = {{"TIME: 00:00:00"}, {"NORMAL: 0", "DEEP POOL: 0"}, {"DIAMONDS: " .. StartingDiamonds .. " | +0"},{"HUGES: " .. StartingHuge .. " | +0"},{"FISH RANK: " .. tostring(GetFishingRank())}}
local GuiLabels = {{}, {}, {}, {}, {}}

local function UIUpdate()
    local ElapsedTime = os.time() - StartTime
    local Hours = math.floor(ElapsedTime / 3600)
    local Minutes = math.floor((ElapsedTime % 3600) / 60)
    local Seconds = ElapsedTime % 60
    local CurrentHuges, newHuges = GetAllHuges()
    local CurrentDiamonds = LocalPlayer.leaderstats["ðŸ’Ž Diamonds"].Value

    GuiLabels[1][1].Text = "TIME: " .. string.format("%02d:%02d:%02d", Hours, Minutes, Seconds)
    GuiLabels[2][1].Text = "NORMAL: " .. NormalTotal
    GuiLabels[2][2].Text = "DEEP POOL: " .. DeepPoolTotal
    GuiLabels[3][1].Text = "DIAMONDS: " .. CurrentDiamonds .. " | +" .. CurrentDiamonds - StartingDiamonds
    GuiLabels[4][1].Text = "HUGES: " .. CurrentHuges .. " | +" .. CurrentHuges - StartingHuge

    if CurrentHuges > 0 then GuiLabels[4][1].BackgroundColor3 = Color3.new(0, 1, 0)
    else GuiLabels[4][1].BackgroundColor3 = Color3.new(1, 1, 1) end
    GuiLabels[5][1].Text = "FISHING RANK: " .. tostring(GetFishingRank())
end

task.spawn(function()
    task.spawn(function()
        while task.wait() do
            local Zone = GetActive()
            if Zone then
                task.spawn(function() 
                    Network.Instancing_InvokeCustomFromClient:InvokeServer(Zone, "Clicked")
                end)
            end
        end
    end)
    local CurrentRod, FishRank = GetCurrentRod()
    if FishRank < 6 then
        while not Active:FindFirstChild("Fishing") do
            LocalPlayer.Character:PivotTo(CFrame.new(workspace.__THINGS.Instances:FindFirstChild("Fishing").Teleports.Enter.Position)) task.wait()
        end
    else
        while not Active:FindFirstChild("AdvancedFishing") do
            LocalPlayer.Character:PivotTo(CFrame.new(workspace.__THINGS.Instances:FindFirstChild("AdvancedFishing").Teleports.Enter.Position)) task.wait()
        end
    end

    local WoodenRod = CheckForItem("Wooden Fishing Rod")
    while not WoodenRod do
        FishingRemote:InvokeServer("Fishing", "ClaimRod") task.wait(1)
        WoodenRod = CheckForItem("Wooden Fishing Rod")
    end

    local Optimized = false
    if Config.Optimizations.Mega_Optimizer and not Optimized then
        loadstring(game:HttpGet('https://raw.githubusercontent.com/fifi1231/fg/main/sdf/opty.lua'))()
        Optimized = true
    end
    local Optimized = false
    if Config.Optimizations.hidepayer and not Optimized then
        loadstring(game:HttpGet('https://raw.githubusercontent.com/fifi1231/fg/main/sdf/hideplayer.lua'))()
        Optimized = true
    end
    if not Gui and Config.Fishing["Stats UI"] then
        Gui = Instance.new("ScreenGui")
        Gui.Parent = game.Players.LocalPlayer.PlayerGui
        for i, row in ipairs(GuiText) do
            for ii, Text in ipairs(row) do
                local TextLabel = Instance.new("TextLabel")
                TextLabel.Parent = Gui
                TextLabel.Text = Text
                TextLabel.Font = Enum.Font.BuilderSansExtraBold
                TextLabel.TextSize = 72
                TextLabel.Size = UDim2.new(1 / #row, 0, 0.16, 0)
                TextLabel.Position = UDim2.new(0 + (ii - 1) / #row, 0, (i - 1) * 0.16, 0)
                TextLabel.AnchorPoint = Vector2.new(0, 0)
                TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
                GuiLabels[i][ii] = TextLabel
            end
        end
        task.spawn(function() 
            while task.wait(1) do 
                pcall(function() UIUpdate() end)
            end 
        end)
    end

    local FishingRank = GetFishingRank()
    Network.Instancing_FireCustomFromServer.OnClientEvent:Connect(function(Zone, Cmd, plr)
        local DoneFishing = false
        while not DoneFishing do
            pcall(function() 
                local i = 0
                if Zone == GetActive() then
                    if tostring(plr) == game.Players.LocalPlayer.Name then
                        if Cmd == "Hook" then 
                            local Success = false
                            while not Success and i < 100 do
                                Success = FishingRemote:InvokeServer(Zone, "RequestReel") 
                                task.wait()
                                i = i + 1
                            end 
                            if i < 100 then 
                                DoneFishing = true 
                            end
                        elseif Cmd == "FishingSuccess" then
                            if FishingRank < 9 then
                                local CurrentRod, FishRank = GetCurrentRod()
                                local CurrentCoins = (require(game.ReplicatedStorage.Library).Client.CurrencyCmds.Get("Fishing") or 0)
                                if CurrentCoins >= NEXT_ROD_COST[CurrentRod] and Config.Fishing["Buy Rods"] then
                                    Network.FishingMerchant_PurchaseRod:InvokeServer(NEXT_ROD[CurrentRod])
                                end
                                if Zone == "Fishing" then
                                    if FishingRank >= 6 or (FishingRank >= 4 and CurrentCoins >= NEXT_ROD_COST[CurrentRod]) then
                                        while Active:FindFirstChild("Fishing") do 
                                            LocalPlayer.Character:PivotTo(CFrame.new(workspace.__THINGS.Instances:FindFirstChild("Fishing").Teleports.Enter.Position)) task.wait()
                                        end
                                        while not Active:FindFirstChild("AdvancedFishing") do 
                                            LocalPlayer.Character:PivotTo(CFrame.new(workspace.__THINGS.Instances:FindFirstChild("AdvancedFishing").Teleports.Enter.Position)) task.wait()
                                        end
                                        Zone = GetActive()
                                    end
                                end
                            end
                        end
                    end
                end
            end)
            task.wait(10)
        end
    end)
    task.spawn(function()
        while task.wait() do
            local Zone = GetActive()
            if FishingRank < 30 then 
                FishingRank = GetFishingRank() 
            end
            local DeepPool = Active[Zone].Interactable:FindFirstChild("DeepPool")
            local Success = false
            if DeepPool and FishingRank >= 30 then
                while not Success do 
                    Success = FishingRemote:InvokeServer(Zone, "RequestCast", DeepPool.Position) task.wait()
                end
                DeepPoolTotal = DeepPoolTotal + 1
            else
                while not Success do 
                    Success = FishingRemote:InvokeServer(Zone, "RequestCast", GetCastVector()) task.wait()
                end
                NormalTotal = NormalTotal + 1
            end
        end
    end)
end)
